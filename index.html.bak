<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Prūšu receptes</title>
	<script src="awesomplete.min.js"></script>
	<script src="awesomplete.js"></script>
	<link rel="stylesheet" href="awesomplete.css">
	<link rel="stylesheet" href="awesomplete.base.css">
	
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const inputs = document.querySelectorAll('.awesomplete');
            inputs.forEach(input => {
                const awesomplete = new Awesomplete(input, { minChars: 1, list: [] });
                awesomplete.list = getUniqueIngredients();
            });
        });

        const recipesKey = 'prusu_recipes';

        // Function to get unique ingredients from recipes
        function getUniqueIngredients() {
            const allIngredients = recipes.reduce((acc, recipe) => [...acc, ...recipe.ingredients], []);
            return [...new Set(allIngredients)];
        }

        // Function to get recipes from localStorage
        function getRecipesFromStorage() {
            const storedRecipes = localStorage.getItem(recipesKey);
            return storedRecipes ? JSON.parse(storedRecipes) : [];
        }

        // Function to save recipes to localStorage
        function saveRecipesToStorage(recipes) {
            localStorage.setItem(recipesKey, JSON.stringify(recipes));
        }

        // Add your recipes here
        let recipes = getRecipesFromStorage();

        // Function to display the list of recipes
        function displayRecipeList() {
            const recipeListUl = document.getElementById("recipe-list-ul");
            recipeListUl.innerHTML = recipes.map((recipe, index) => `<li>${recipe.title} <button onclick="deleteRecipe(${index})">Dzēst</button></li>`).join('');
        }

        // Function to delete a recipe
        function deleteRecipe(index) {
            recipes.splice(index, 1);
            saveRecipesToStorage(recipes);
            displayRecipeList();
        }

        // Initial display of the recipe list
        displayRecipeList();

        function generateRecipe() {
            const ingredient1 = document.getElementById("ingredient1").value.toLowerCase();
            const ingredient2 = document.getElementById("ingredient2").value.toLowerCase();
            const ingredient3 = document.getElementById("ingredient3").value.toLowerCase();

            const filteredRecipes = recipes.filter(recipe =>
                (ingredient1 === '' || recipe.ingredients.some(i => i.toLowerCase().includes(ingredient1))) &&
                (ingredient2 === '' || recipe.ingredients.some(i => i.toLowerCase().includes(ingredient2))) &&
                (ingredient3 === '' || recipe.ingredients.some(i => i.toLowerCase().includes(ingredient3)))
            );

            if (filteredRecipes.length > 0) {
                const randomRecipe = filteredRecipes[Math.floor(Math.random() * filteredRecipes.length)];
                document.getElementById("result").innerHTML = `
                    <h2>${randomRecipe.title}</h2>
                    <h3>Sastāvdaļas:</h3>
                    <ul>${randomRecipe.ingredients.map((ingredient, index) => `<li><input type="checkbox" id="ingredientCheckbox${index}" onchange="toggleStrikethrough(${index})">${ingredient}</li>`).join('')}</ul>
                    <h3>Soļi:</h3>
                    <ol>${randomRecipe.steps.map((step, index) => `<li><input type="checkbox" id="stepCheckbox${index}" onchange="toggleStrikethrough(${index})">${step}</li>`).join('')}</ol>
                `;
            } else {
                document.getElementById("result").innerHTML = "Tādu recepšu vēl nav.";
            }
        }

        function toggleStrikethrough(index) {
            const ingredientCheckbox = document.getElementById(`ingredientCheckbox${index}`);
            const stepCheckbox = document.getElementById(`stepCheckbox${index}`);

            if (ingredientCheckbox) {
                const ingredientLabel = ingredientCheckbox.parentElement;
                ingredientLabel.style.textDecoration = ingredientCheckbox.checked ? 'line-through' : 'none';
            }

            if (stepCheckbox) {
                const stepLabel = stepCheckbox.parentElement;
                stepLabel.style.textDecoration = stepCheckbox.checked ? 'line-through' : 'none';
            }
        }

        function addRecipe(event) {
            event.preventDefault();

            const newTitleElement = document.getElementById("new-title");
            const newIngredientsElement = document.getElementById("new-ingredients");
            const newStepsElement = document.getElementById("new-steps");

            if (!newTitleElement || !newIngredientsElement || !newStepsElement) {
                alert("Aizpildi visus laukus");
                return;
            }

            const newTitle = newTitleElement.value;
            const newIngredients = newIngredientsElement.value.split(',').map(i => i.trim());
            const newSteps = newStepsElement.value.split(',').map(s => s.trim());

            if (!newTitle || newIngredients.length === 0 || newSteps.length === 0) {
                alert("Aizpildi visus laukus");
                return;
            }

            recipes.push({
                title: newTitle,
                ingredients: newIngredients,
                steps: newSteps
            });

            newTitleElement.value = '';
            newIngredientsElement.value = '';
            newStepsElement.value = '';

            saveRecipesToStorage(recipes);
            displayRecipeList();

            alert("Recepte veiksmīgi pievienota!");
        }

        function addRow(tableId) {
            const table = document.getElementById(tableId);

            if (table) {
                const newRow = table.insertRow(-1);

                if (tableId === 'ingredients-table') {
                    const cell1 = newRow.insertCell(0);
                    const cell2 = newRow.insertCell(1);
                    cell1.innerHTML = '<input type="text" class="ingredient-input awesomplete" placeholder="Sastāvdaļa" data-list="[]">';
                    cell2.innerHTML = '<input type="text" class="quantity-input" placeholder="Daudzums">';
                } else if (tableId === 'steps-list') {
                    const cell = newRow.insertCell(0);
                    cell.innerHTML = `<input type="text" class="step-input" placeholder="Soļa apraksts">`;
                }
            }
        }
    </script>
</head>
<body>
    <div class="container">
        <header>
            <h1>Prūšu receptes</h1>
        </header>

        <div class="section-container">
            <div class="randomizer-section">
                <label for="ingredient1">Ievadi sastāvdaļu:</label>
                <input type="text" id="ingredient1" class="awesomplete" placeholder="Ievadi sastāvdaļu" data-list="[]"><br>

                <label for="ingredient2">Ievadi sastāvdaļu:</label>
                <input type="text" id="ingredient2" class="awesomplete" placeholder="Ievadi sastāvdaļu" data-list="[]"><br>

                <label for="ingredient3">Ievadi sastāvdaļu:</label>
                <input type="text" id="ingredient3" class="awesomplete" placeholder="Ievadi sastāvdaļu" data-list="[]"><br>

                <button onclick="generateRecipe()">Atrast recepti</button>
                <div id="result"></div>
            </div>

            <div class="recipe-input-section">
                <h2>Pievienot jaunu recepti</h2>
                <form onsubmit="addRecipe(event)">
                    <label for="new-title">Nosaukums:</label>
                    <input type="text" id="new-title" required>

                    <div id="ingredients-section">
                        <h3>Sastāvdaļas:</h3>
                        <table id="ingredients-table">
                            <tr>
                                <td><input type="text" class="ingredient-input awesomplete" placeholder="Sastāvdaļa" data-list="[]"></td>
                                <td><input type="text" class="quantity-input" placeholder="Daudzums"></td>
                            </tr>
                        </table>
                        <button type="button" onclick="addRow('ingredients-table')">Pievienot vēl</button>
                    </div>

                    <div id="steps-section">
                        <h3>Soļi:</h3>
                        <ol id="steps-list">
                            <li><input type="text" class="step-input" placeholder="Soļa apraksts"></li>
                        </ol>
                        <button type="button" onclick="addRow('steps-list')">Pievienot vēl</button>
                    </div>

                    <button type="submit">Pievienot recepti</button>
                </form>
            </div>

            <div class="recipe-list-section">
                <h2>Recepšu saraksts</h2>
                <ul id="recipe-list-ul">
                    <!-- Recipes will be dynamically added here -->
                </ul>
            </div>
        </div>

        <script>
            function displayRecipeList() {
                const recipeListUl = document.getElementById("recipe-list-ul");
                recipeListUl.innerHTML = recipes.map((recipe, index) => `<li>${recipe.title} <button onclick="deleteRecipe(${index})">Dzēst</button></li>`).join('');
            }

            displayRecipeList();
        </script>
    </div>
</body>
</html>